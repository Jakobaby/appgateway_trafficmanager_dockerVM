{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
      "applicationGateways_appgateway_name": {
        "defaultValue": "appgateway",
        "type": "String"
      },
      "virtualNetworks_applicatiepoortvnet_externalid": {
        "defaultValue": "/subscriptions/b8f93236-b637-4607-84ca-09c6f1b13f9d/resourceGroups/JakobijnStrobbe/providers/Microsoft.Network/virtualNetworks/applicatiepoortvnet",
        "type": "String"
      },
      "publicIPAddresses_mooi_externalid": {
        "defaultValue": "/subscriptions/b8f93236-b637-4607-84ca-09c6f1b13f9d/resourceGroups/JakobijnStrobbe/providers/Microsoft.Network/publicIPAddresses/mooi",
        "type": "String"
      },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "metadata": {
        "description": "VM size for the Docker host."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "metadata": {
        "description": "The Ubuntu version for deploying the Docker containers. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04.4-LTS, 15.10, 16.04.0-LTS"
      },
      "allowedValues": [
        "14.04.4-LTS",
        "15.10",
        "16.04.0-LTS",
        "18.04-LTS"
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    }
  },
  "variables": {
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "OSDiskName": "osdiskfordockersimple",
    "nicName": "myVMNicD",
    "extensionName": "DockerExtension",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "diskStorageType": "Standard_LRS",
    "publicIPAddressName": "myPublicIPD",
    "publicIPAddressType": "Dynamic",
    "vmName": "MyDockerVM",
    "virtualNetworkName": "MyVNETD",
    "trafficManagerName": "trafficmanagerjakobeanstra",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2018-04-01",
      "name": "trafficmanagerjakobeanstra",
      "location": "global",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "profileStatus": "enabled",
        "trafficRoutingMethod": "Geographic",
        "dnsConfig": {
          "relativeName": "trafficmanagerjakobeanstra",
          "ttl": "60"
        },
        "monitorConfig": {
          "profileMonitorStatus": "Degraded",
          "protocol": "HTTP",
          "port": "80",
          "path": "/",
          "intervalInSeconds": "30",
          "timeoutInSeconds": "10",
          "toleratedNumberOfFailures": "3"
        },
        "endpoints": [
          {
            "name": "myVMNicD",
            "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties": {
              "targetResourceId": "[resourceId ('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
              "endpointStatus": "Enabled",
              "weight": "1",
              "priority": "1",
              "endpointMonitorStatus": "Degraded",
              "geoMapping": [
                "WORLD"
              ]
            }
          }
        ],
        "trafficViewEnrollmentStatus": "Disabled"
      },
      "tags": {},
      "type": "Microsoft.Network/trafficmanagerprofiles"
    },
      {
        "apiVersion": "2019-08-01",
        "dependsOn": [
          "[concat('Microsoft.Network/trafficManagerProfiles/', variables('trafficManagerName'))]"
        ],
        "location": "westeurope",
        "name": "[parameters('applicationGateways_appgateway_name')]",
        "properties": {
          "sku": {
            "name": "Standard_v2",
            "tier": "Standard_v2"
          },
          "gatewayIPConfigurations": [
            {
              "name": "appGatewayIpConfig",
              "properties": {
                "subnet": {
                  "id": "[concat(parameters('virtualNetworks_applicatiepoortvnet_externalid'), '/subnets/default')]"
                }
              }
            }
          ],
          "sslCertificates": [],
          "trustedRootCertificates": [],
          "frontendIPConfigurations": [
            {
              "name": "appGwPublicFrontendIp",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[parameters('publicIPAddresses_mooi_externalid')]"
                }
              }
            }
          ],
          "frontendPorts": [
            {
              "name": "port_80",
              "properties": {
                "port": 80
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "sjoerdenjako",
              "properties": {
                "backendAddresses": [
                  {
                    "fqdn": "trafficmanagerjakobeanstra"
                  }
                ]
              }
            }
          ],
          "backendHttpSettingsCollection": [
            {
              "name": "http",
              "properties": {
                "port": 80,
                "protocol": "Http",
                "cookieBasedAffinity": "Disabled",
                "pickHostNameFromBackendAddress": false,
                "requestTimeout": 20
              }
            }
          ],
          "httpListeners": [
            {
              "name": "luisteraar",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgateway_name')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                },
                "frontendPort": {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgateway_name')), '/frontendPorts/port_80')]"
                },
                "protocol": "Http",
                "requireServerNameIndication": false
              }
            }
          ],
          "urlPathMaps": [],
          "requestRoutingRules": [
            {
              "name": "vluchtregel",
              "properties": {
                "ruleType": "Basic",
                "httpListener": {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgateway_name')), '/httpListeners/luisteraar')]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgateway_name')), '/backendAddressPools/sjoerdenjako')]"
                },
                "backendHttpSettings": {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_appgateway_name')), '/backendHttpSettingsCollection/http')]"
                }
              }
            }
          ],
          "probes": [],
          "rewriteRuleSets": [],
          "redirectConfigurations": [],
          "enableHttp2": false,
          "autoscaleConfiguration": {
            "minCapacity": 0,
            "maxCapacity": 10
          }
        },
        "type": "Microsoft.Network/applicationGateways"
      },
    {
      "apiVersion": "2019-09-01",
      "location": "[parameters('location')]",
      "name": "[variables('publicIPAddressName')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
      {
        "apiVersion": "2019-09-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-09-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-07-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[parameters('ubuntuOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(variables('vmName'),'_OSDisk')]",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[variables('diskStorageType')]"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmName'),'/', variables('extensionName'))]",
        "apiVersion": "2019-07-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "DockerExtension",
          "typeHandlerVersion": "1.0",
          "autoUpgradeMinorVersion": true,
          "settings": {}
        }
      }
  ]
}